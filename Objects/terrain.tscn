[gd_scene load_steps=12 format=2]

[ext_resource path="res://Objects/terrain.gd" type="Script" id=2]
[ext_resource path="res://Textures/dirt.jpg" type="Texture" id=3]
[ext_resource path="res://Textures/aerial_rocks_04_diff_1k.jpg" type="Texture" id=5]
[ext_resource path="res://Textures/snow.jpg" type="Texture" id=6]
[ext_resource path="res://Textures/red_mud_stones_diff_1k.jpg" type="Texture" id=7]
[ext_resource path="res://Textures/rocks_ground_08_diff_1k.jpg" type="Texture" id=8]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
//render_mode diffuse_toon;

uniform vec4 color1: hint_color;
uniform vec4 color2: hint_color;
uniform vec4 color_steep: hint_color;
uniform float max_grass_height = 2.0;
uniform float min_snow_height = 18.0;
uniform float slope_factor = 8.0;

uniform sampler2D grass_tex1;
uniform vec2 grass_scale;
uniform sampler2D grass_tex2;
uniform sampler2D grass_noise;

uniform sampler2D dirt_tex1;
uniform vec2 dirt_scale;
uniform sampler2D dirt_tex2;

uniform sampler2D snow_tex;
uniform vec2 snow_scale;

varying float height_val;
varying vec3 normal;

void vertex(){
	height_val = VERTEX.y;
	normal = NORMAL;
}

float get_slope_of_terrain(float height_normal){
	float slope = 1.0-height_normal;
	slope *= slope;
	return (slope*slope_factor);
}

float get_snow_and_grass_mix(float curr_height){
	if (curr_height > min_snow_height){
		return 1.0;
	}
	if (curr_height  < max_grass_height){
		return 0.0;
	}
	float mix_height = (curr_height-max_grass_height) / (min_snow_height-max_grass_height);
	return mix_height;
}

void fragment(){
	
	vec3 noise = vec3(texture(grass_noise, UV).rgb);
	vec3 dnoise = vec3(texture(grass_noise, UV*50.0).rgb);
	
//	vec3 dirt1 = vec3(texture(dirt_tex1, UV*dirt_scale).rgb)*0.35;
//	vec3 dirt2 = vec3(texture(dirt_tex2, UV*dirt_scale).rgb)*0.36;
	vec3 grass1 = vec3(texture(grass_tex1, UV*grass_scale).rgb)*0.35;
	vec3 grass2 = vec3(texture(grass_tex2, UV*grass_scale).rgb)*0.36;
//	vec3 snow = vec3(texture(snow_tex, UV*snow_scale).rgb);
	
	//snow = vec3(0.5,0.1,0.1);
	vec3 grass = mix(color1.rgb, color2.rgb, noise);
	//vec3 dirt = mix(vec3(0.2,0.2,0.0), vec3(0.2,0.05,0.0), noise);
	//vec3 grass = mix(grass1, grass2, noise);
	//vec3 dirt = mix(dirt1, dirt2, noise);
	
	float slope = clamp(get_slope_of_terrain(normal.y), 0.0, 1.0);
	//float snow_mix = clamp(get_snow_and_grass_mix(height_val), 0.0, 1.0);
	
//	vec3 grass_mixin = mix(grass, dirt, slope);
	//vec3 dirt_mixin = mix(dirt, snow, snow_mix/slope);
	//vec3 snow_mixin = mix(snow, dirt_mixin, slope);
	//vec3 mixin = mix(grass_mixin, snow_mixin, snow_mix);
	
	vec3 mixin = mix(grass, color_steep.rgb, slope);

	mixin = round(mixin*32.0)/32.0;

	ALBEDO = mixin;
	NORMALMAP = dnoise;
	NORMALMAP_DEPTH = (dnoise.x+dnoise.y);
	
}
"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
width = 1000
height = 1000
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/color1 = Color( 0.71, 0.51617, 0.2627, 1 )
shader_param/color2 = Color( 0.68, 0.443133, 0.4216, 1 )
shader_param/color_steep = Color( 0.24, 0.1872, 0.1872, 1 )
shader_param/max_grass_height = 250.0
shader_param/min_snow_height = 500.0
shader_param/slope_factor = 0.0
shader_param/grass_scale = Vector2( 0.1, 0.1 )
shader_param/dirt_scale = Vector2( 0.1, 0.1 )
shader_param/snow_scale = Vector2( 0.1, 0.1 )
shader_param/grass_tex1 = ExtResource( 3 )
shader_param/grass_tex2 = ExtResource( 7 )
shader_param/grass_noise = SubResource( 3 )
shader_param/dirt_tex1 = ExtResource( 5 )
shader_param/dirt_tex2 = ExtResource( 8 )
shader_param/snow_tex = ExtResource( 6 )

[sub_resource type="Skin" id=5]

[node name="terrain" type="Spatial" groups=[
"terrain",
]]
script = ExtResource( 2 )

[node name="Tile" type="MeshInstance" parent="."]
material_override = SubResource( 4 )
skin = SubResource( 5 )

[node name="StaticBody" type="StaticBody" parent="Tile"]
collision_layer = 524288

[node name="CollisionShape" type="CollisionShape" parent="Tile/StaticBody"]
